[versions]
asciidoctor = "3.3.2"
assertj = "3.21.0"
# plugin usage is now in a mock build done via TestKit
bytebuddy = "1.11.19"
jmh = "1.33"
jmhReactorExtra = { strictly = "[3.3, 3.4[", prefer = "3.3.3.RELEASE" }
# 3.0.1 is the last version that has the 'annotations' jar needed on the compile classpath
jsr305 = { strictly = "3.0.1" }
junit = "5.8.0"
kotlin = { strictly = "[1.5, 1.6[", prefer = "1.5.31" }
logback = { strictly = "[1.2.5, 1.3[", prefer = "1.2.5" }
micrometer = { strictly = "[1.3, 1.4[", prefer = "1.3.0" }
reactiveStreams = "1.0.3"
slf4j = { strictly = "[1.7, 2.0[", prefer = "1.7.32" }

[libraries]
archUnit = "com.tngtech.archunit:archunit:0.21.0"
assertj = { module = "org.assertj:assertj-core", version.ref = "assertj" }
awaitility = "org.awaitility:awaitility:4.1.0"
blockhound = "io.projectreactor.tools:blockhound:1.0.6.RELEASE"
byteBuddy-agent = { module = "net.bytebuddy:byte-buddy-agent", version.ref = "bytebuddy" }
byteBuddy-api = { module = "net.bytebuddy:byte-buddy", version.ref = "bytebuddy" }
cglib = "cglib:cglib:3.3.0"
javaObjectLayout = "org.openjdk.jol:jol-core:0.16"
jmh-annotations-processor = { module = "org.openjdk.jmh:jmh-generator-annprocess", version.ref = "jmh" }
jmh-core = { module = "org.openjdk.jmh:jmh-core", version.ref = "jmh" }
jmh-reactorExtra = { module = "io.projectreactor.addons:reactor-extra", version.ref = "jmhReactorExtra" }
jsr166backport = "io.projectreactor:jsr166:1.0.0.RELEASE"
jsr305 = { module = "com.google.code.findbugs:jsr305", version.ref = "jsr305" }
junit-bom = { module = "org.junit:junit-bom", version.ref = "junit" }
kotlin-stdlib = { module = "org.jetbrains.kotlin:kotlin-stdlib", version.ref = "kotlin" }
logback = { module = "ch.qos.logback:logback-classic", version.ref = "logback" }
micrometer = { module = "io.micrometer:micrometer-core", version.ref = "micrometer"}
mockito = "org.mockito:mockito-core:3.12.4"
reactiveStreams = { module = "org.reactivestreams:reactive-streams", version.ref = "reactiveStreams" }
reactiveStreams-tck = { module = "org.reactivestreams:reactive-streams-tck", version.ref = "reactiveStreams" }
slf4j = { module = "org.slf4j:slf4j-api", version.ref = "slf4j" }
testNg = "org.testng:testng:7.4.0"
throwingFunction = "com.pivovarit:throwing-function:1.5.1"

[plugins]
artifactory = "com.jfrog.artifactory:4.24.18"
asciidoctor-convert = { id = "org.asciidoctor.jvm.convert", version.ref = "asciidoctor" }
asciidoctor-pdf = { id = "org.asciidoctor.jvm.pdf", version.ref = "asciidoctor" }
bnd = "biz.aQute.bnd.builder:5.3.0"
download = "de.undercouch.download:4.1.2"
japicmp = "me.champeau.gradle.japicmp:0.3.0"
jcstress = "io.github.reyerizo.gradle.jcstress:0.8.11"
kotlin = { id = "org.jetbrains.kotlin.jvm", version.ref = "kotlin" }
nohttp = "io.spring.nohttp:0.0.9"
shadow = "com.github.johnrengelman.shadow:7.1.1"
spotless = "com.diffplug.spotless:5.15.0"
testsets = "org.unbroken-dome.test-sets:4.0.0"
